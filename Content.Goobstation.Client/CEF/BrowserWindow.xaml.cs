using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Client.WebView;
using Robust.Shared.ContentPack;

namespace Content.Goobstation.Client.CEF
{
    [GenerateTypedNameReferences]
    public sealed partial class BrowserWindow : DefaultWindow
    {
        [Dependency] private readonly IResourceManager _res = default!;

        private readonly ISawmill _sawmill;

        public BrowserWindow()
        {
            IoCManager.InjectDependencies(this);
            RobustXamlLoader.Load(this);

            Browser.MouseFilter = MouseFilterMode.Stop;
            MouseFilter = MouseFilterMode.Pass;

            UrlBar.OnTextEntered += UrlBarOnOnTextEntered;
            Browser.AddResourceRequestHandler(ResLoader);

            _sawmill = Logger.GetSawmill("browser");
        }

        private void ResLoader(IRequestHandlerContext obj)
        {
            var uri = new Uri(obj.Url);

            if (uri.Scheme != "res")
                return;

            // _sawmill.Debug($"HANDLING: {obj.Url}, {uri.AbsolutePath}");

            if (_res.TryContentFileRead(uri.AbsolutePath, out var stream))
            {
                var mime = "text/plain";
                if (uri.AbsolutePath.EndsWith(".png"))
                    mime = "image/png";
                else if (uri.AbsolutePath.EndsWith(".html"))
                    mime = "text/html";

                obj.DoRespondStream(stream, mime);
            }
            else
            {
                obj.DoRespondStream(_res.ContentFileRead("/404.txt"), "text/plain");
            }
        }

        private void UrlBarOnOnTextEntered(LineEdit.LineEditEventArgs obj)
        {
            Browse(obj.Text);
        }

        public void Browse(string url)
        {
            Browser.Url = url;
        }
    }
}
